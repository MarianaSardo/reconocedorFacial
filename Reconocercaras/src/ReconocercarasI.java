
import java.awt.BorderLayout;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import org.opencv.core.Mat;
import org.opencv.core.MatOfRect;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.objdetect.CascadeClassifier;

public class ReconocercarasI extends javax.swing.JFrame {

    /**
     * Creates new form ReconocercarasI
     */



static {
    System.load("C:/opencv/build/java/x86/opencv_java3411.dll");
}





    public ReconocercarasI() {
        initComponents();

        jButtonSubir.setVisible(false);
        jButtonDetectar.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonExaminar = new javax.swing.JButton();
        jTextRuta = new javax.swing.JTextField();
        jButtonSubir = new javax.swing.JButton();
        jPanelMostrar = new javax.swing.JPanel();
        jPanelMostrarDetectado = new javax.swing.JPanel();
        jLabelCantidad = new javax.swing.JLabel();
        jButtonDetectar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Detector de rostros");

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jButtonExaminar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonExaminar.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButtonExaminar.setForeground(new java.awt.Color(255, 204, 204));
        jButtonExaminar.setText("Examinar");
        jButtonExaminar.setMaximumSize(new java.awt.Dimension(6, 31));
        jButtonExaminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExaminarActionPerformed(evt);
            }
        });

        jTextRuta.setBackground(new java.awt.Color(255, 237, 255));
        jTextRuta.setFont(new java.awt.Font("Ebrima", 0, 18)); // NOI18N
        jTextRuta.setMaximumSize(new java.awt.Dimension(6, 31));
        jTextRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextRutaActionPerformed(evt);
            }
        });

        jButtonSubir.setBackground(new java.awt.Color(102, 102, 102));
        jButtonSubir.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButtonSubir.setForeground(new java.awt.Color(255, 204, 204));
        jButtonSubir.setText("Subir");
        jButtonSubir.setMaximumSize(new java.awt.Dimension(6, 31));
        jButtonSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubirActionPerformed(evt);
            }
        });

        jPanelMostrar.setBackground(new java.awt.Color(51, 51, 51));
        jPanelMostrar.setMaximumSize(new java.awt.Dimension(402, 402));

        jPanelMostrarDetectado.setBackground(new java.awt.Color(51, 51, 51));
        jPanelMostrarDetectado.setMaximumSize(new java.awt.Dimension(402, 402));

        jLabelCantidad.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabelCantidad.setForeground(new java.awt.Color(255, 204, 204));
        jLabelCantidad.setMaximumSize(new java.awt.Dimension(6, 31));

        jButtonDetectar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonDetectar.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jButtonDetectar.setForeground(new java.awt.Color(255, 204, 204));
        jButtonDetectar.setText("Detectar");
        jButtonDetectar.setMaximumSize(new java.awt.Dimension(6, 31));
        jButtonDetectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDetectarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonExaminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .addComponent(jTextRuta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSubir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDetectar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelMostrar, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                    .addComponent(jPanelMostrarDetectado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonExaminar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSubir, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDetectar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanelMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelMostrarDetectado, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonDetectar, jButtonExaminar, jButtonSubir, jTextRuta});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanelMostrar, jPanelMostrarDetectado});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static BufferedImage matToBufferedImage(Mat mat) {
        // Verificar el tipo de la matriz
        int type = BufferedImage.TYPE_BYTE_GRAY;
        if (mat.channels() > 1) {
            type = BufferedImage.TYPE_3BYTE_BGR;
        }

        // Crear una imagen BufferedImage con las dimensiones de la matriz
        BufferedImage image = new BufferedImage(mat.cols(), mat.rows(), type);

        // Obtener el arreglo de bytes de la matriz
        byte[] data = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();

        // Copiar los datos de la matriz al arreglo de bytes
        mat.get(0, 0, data);

        return image;
    }

    private void jButtonDetectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDetectarActionPerformed

if (jTextRuta.getText().isEmpty()) {
        // No se ha seleccionado ninguna imagen, muestra un mensaje de error o realiza alguna acción
        return;
    }

    String filePath = jTextRuta.getText();

    // Cargar la imagen desde el archivo seleccionado
    Mat image = Imgcodecs.imread(filePath);

    // Cargar el clasificador de cascada para detección de gatos (haarcascade_frontalcatface.xml)
    CascadeClassifier faceDetector = new CascadeClassifier("C:\\opencv\\data\\haarcascades\\haarcascade_frontalcatface.xml");

    /*
    
    
    // Cargar el clasificador de cascada para detección de rostros (haarcascade_frontalface_default.xml)
    CascadeClassifier faceDetector = new CascadeClassifier("C:\\opencv\\data\\haarcascades\\haarcascade_frontalface_default.xml");

    */
    
    // Detectar rostros en la imagen
    MatOfRect faceDetections = new MatOfRect();
    faceDetector.detectMultiScale(image, faceDetections);

    // Dibujar un círculo alrededor de cada rostro detectado
    for (Rect rect : faceDetections.toArray()) {
        Imgproc.circle(image, new org.opencv.core.Point(rect.x + rect.width / 2, rect.y + rect.height / 2), rect.width / 2, new Scalar(0, 0, 255), 4);
    }

    // Convertir la imagen en formato Mat a BufferedImage
    BufferedImage bufferedImage = matToBufferedImage(image);

    // Redimensionar la imagen para que se ajuste al tamaño del jPanelMostrarDetectado
    int width = jPanelMostrarDetectado.getWidth();
    int height = jPanelMostrarDetectado.getHeight();
    Image resizedImage = bufferedImage.getScaledInstance(width, height, Image.SCALE_SMOOTH);

    // Crear un componente JLabel para mostrar la imagen redimensionada
    JLabel label = new JLabel(new ImageIcon(resizedImage));

    // Limpiar el jPanelMostrarDetectado antes de agregar el JLabel
    jPanelMostrarDetectado.removeAll();

    // Establecer el layout del jPanelMostrarDetectado como BorderLayout
    jPanelMostrarDetectado.setLayout(new BorderLayout());

    // Agregar el JLabel al centro del jPanelMostrarDetectado
    jPanelMostrarDetectado.add(label, BorderLayout.CENTER);

    // Actualizar la interfaz gráfica para que se muestre la imagen con los rostros detectados
    jPanelMostrarDetectado.revalidate();
    jPanelMostrarDetectado.repaint();

    // Obtener la cantidad de rostros detectados
    int cantidadRostros = faceDetections.toArray().length;

    // Actualizar la etiqueta con la cantidad de rostros
    jLabelCantidad.setText(cantidadRostros + " michis detectados.");        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDetectarActionPerformed

    private void jButtonExaminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExaminarActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showOpenDialog(this); // "this" se refiere al formulario actual

        if (option == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getPath();
            System.out.println("Archivo seleccionado: " + filePath);
            // Realiza la lógica con el archivo seleccionado
        } else {
            System.out.println("No se seleccionó ningún archivo");
        }

        if (option == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getPath();
            jTextRuta.setText(filePath);
            // Realiza la lógica con el archivo seleccionado

        } else {
            System.out.println("No se seleccionó ningún archivo");
        }

        if (jTextRuta.getText().equals("")) {
            jButtonSubir.setVisible(false);

        } else {
            jButtonSubir.setVisible(true);
            jButtonSubir.setVisible(true);
        }
        // TODO add your handling code here:

    }//GEN-LAST:event_jButtonExaminarActionPerformed

    private void jTextRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextRutaActionPerformed

    private void jButtonSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubirActionPerformed
        
          // Limpiar el jPanelMostrar antes de agregar el JLabel
            jPanelMostrarDetectado.removeAll();
        
        if (jTextRuta.getText().isEmpty()) {
            // No se ha seleccionado ninguna imagen, muestra un mensaje de error o realiza alguna acción
            return;
        }

        String filePath = jTextRuta.getText();

        try {
            // Cargar la imagen desde el archivo seleccionado
            BufferedImage originalImage = ImageIO.read(new File(filePath));
            // Obtener el tamaño del JPanel
            int panelWidth = jPanelMostrar.getWidth();
            int panelHeight = jPanelMostrar.getHeight();
            

            // Redimensionar la imagen al tamaño del JPanel
            Image scaledImage = originalImage.getScaledInstance(panelWidth, panelHeight, Image.SCALE_SMOOTH);

            // Crear un componente JLabel para mostrar la imagen redimensionada
            JLabel label = new JLabel(new ImageIcon(scaledImage));

          // Limpiar el jPanelMostrar antes de agregar el JLabel
            jPanelMostrar.removeAll();

            // Establecer el layout del jPanelMostrar como BorderLayout
            jPanelMostrar.setLayout(new BorderLayout());

            // Agregar el JLabel al centro del jPanelMostrar
            jPanelMostrar.add(label, BorderLayout.WEST);

            // Actualizar la interfaz gráfica para que se muestre la imagen
            jPanelMostrar.revalidate();
            jPanelMostrar.repaint();
            
        
        } catch (IOException ex) {
            // Ocurrió un error al cargar la imagen, muestra un mensaje de error o realiza alguna acción
            ex.printStackTrace();
        }

        // TODO add your handling code here:
        jButtonDetectar.setVisible(true);


    }//GEN-LAST:event_jButtonSubirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReconocercarasI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReconocercarasI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReconocercarasI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReconocercarasI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReconocercarasI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDetectar;
    private javax.swing.JButton jButtonExaminar;
    private javax.swing.JButton jButtonSubir;
    private javax.swing.JLabel jLabelCantidad;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelMostrar;
    private javax.swing.JPanel jPanelMostrarDetectado;
    private javax.swing.JTextField jTextRuta;
    // End of variables declaration//GEN-END:variables
}
